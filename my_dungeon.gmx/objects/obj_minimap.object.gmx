<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>map_w = obj_control.bsp_xsize;
map_h = obj_control.bsp_ysize;
tile_s = 6; //obj_control.bsp_tilesize;

mini_w = (map_w+1)*tile_s;
mini_h = (map_h+1)*tile_s;

mini_map = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dx_mini = view_xview + 50;
dy_mini = view_yview + 90;



//draw it on the screen(view[0])
if(!mini_map)
{
    draw_set_color(c_black);
    draw_rectangle(dx_mini, dy_mini, dx_mini + mini_w, dy_mini + mini_h, 0);

//j=0;
//for(i=0; i&lt;map_w; i+=1)
//draw_rectangle(dx_mini+i*tile_s, dy_mini+j*tile_s, dx_mini+(i+tile_s)*tile_s, dy_mini+(j+tile_s)*tile_s, 0); 

for(i=0; i&lt;map_w; i+=1)
for(j=0; j&lt;map_h; j+=1)
{   
/* 
    draw_set_color(c_dkgray);
    if (ds_grid_get(obj_control.bsp_grid, i, j)==1)
        draw_rectangle(dx_mini+i*tile_s, dy_mini+j*tile_s, dx_mini+(i+tile_s)*tile_s, dy_mini+(j+tile_s)*tile_s, 0); 
   */
       
    switch (ds_grid_get(obj_control.bsp_grid, i, j))
    {
        case 1: 
            draw_set_color(c_dkgray);             
        break;
        case 2: 
            draw_set_color(c_black);             
        break; 
        default: draw_set_color(c_black);
    } 
    draw_rectangle(dx_mini+i*tile_s, dy_mini+j*tile_s, dx_mini+(i*tile_s)+tile_s, dy_mini+(j*tile_s)+tile_s, 0);   
       
    //if (global.map_tile[i, j] == TILE_DOOR) draw_set_color(c_teal);
        
    
    draw_set_color(c_green);
    //draw_point(dx_mini + ((obj_player.x / room_width) * global.MAP_W), dy_mini + ((obj_player.y / room_height) * global.MAP_H));
    //draw_point(dx_mini + obj_player.x*map_w*tile_s/mini_w, dy_mini + obj_player.y*map_h*tile_s/mini_h); 
    player_mini_x = (obj_player.x div 32); //obj_player.x/(room_width*mini_w);
    player_mini_y = (obj_player.y div 32);//obj_player.y/(room_height*mini_h);
    draw_rectangle(dx_mini + player_mini_x*tile_s, dy_mini + player_mini_y*tile_s,
        dx_mini + player_mini_x*tile_s+tile_s, dy_mini + player_mini_y*tile_s+tile_s, 0); 
        
    draw_set_color(c_red);   
    with (obj_enemy)
    {
        enemy_mini_x = (obj_enemy.x div 32); 
        enemy_mini_y = (obj_enemy.y div 32);
        draw_rectangle(dx_mini + enemy_mini_x*tile_s, dy_mini + enemy_mini_y*tile_s, dx_mini + enemy_mini_x*tile_s+tile_s, dy_mini + enemy_mini_y*tile_s+tile_s, 0);
    }   
}

}
draw_text(dx_mini+(mini_w div 2), dy_mini+mini_h, obj_player.x);
draw_text(dx_mini+mini_w, dy_mini+mini_h, player_mini_x);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mini_map = !mini_map;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
