<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>wall_mask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha=0
attack_type=""
damage_modifier=1
fire=false</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=mouse_x-8
y=mouse_y-8
move_snap(16,16)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fire=false

with(p_floor)
{
if (place_meeting(x,y,o_aim) &amp;&amp; image_alpha=1)
    {
    o_aim.fire=true
    }
}

if attack_type="blink"
{
with(p_enemy)
{
if (place_meeting(x,y,o_aim) &amp;&amp; image_alpha=1)
    {
    o_aim.fire=false
    }
}
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_tile_floor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.ranged_attack=false
instance_destroy()</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>normalize_stats()

if attack_type="arrows"
{
add_message("You shoot an arrow.")

        if fire=true
        {

        for (i=0 i&lt;20 i+=1)
                {            
                if global.item[i,2]="arrows"
                    {
                    global.item[i,3]-=1
            
                    if global.item[i,3]=0
                        {
                        global.item[i,0]=""
                        global.item[i,1]=s_item_none
                        global.item[i,2]=""
                        global.item[i,3]=0
                        global.item[i,4]="inventory"
                        }
                    break
                    }
                }



            with(o_player)
            {
            arrow=instance_create(x,y,o_arrow)
            arrow.sprite_index=s_arrow
            arrow.image_angle=point_direction(x,y,o_aim,o_aim)
            arrow.destx=o_aim.x
            arrow.desty=o_aim.y
            if global.sound=true {sound_play(snd_arrow)}
            }

        if place_meeting(x,y,p_enemy)
        {
            calling_other=instance_nearest(x,y,p_enemy)

            var oppo_name;
            oppo_name=calling_other.name
            
            if room=room_tutorial_land
            {
            if oppo_name="the rat"
            o_tutorial_guy.rat_targetted=true
            }

            own_atk=random((global.player_total_int+global.player_total_dex)/2)
            oppo_def=random((calling_other.total_dex/2)+calling_other.total_ev)
    
            if (own_atk&gt;oppo_def)
                {
                var damage;
        
                damage=round(random(global.player_total_str))-(round(calling_other.total_ac+(calling_other.total_str/8)))
        
                if (damage&gt;0)
                    {
                    calling_other.healthnow-=damage
            
                    //DAMAGE MESSAGE
                    add_message("You deal " +string(damage) + string(' damage to ')+string(oppo_name)+string('.'),0)
            
                    //KILL MESSAGE
                    if (calling_other.healthnow&lt;=0)
                        {
                        add_message("You killed " +string(oppo_name)+string('.'),16)
                        }
                    }
                    else
                    add_message("You miss.",0)
                }
                else
                add_message("You miss.",0)
            }

            global.ranged_attack=false
            instance_destroy()

            if floor(random(1.2))=0//83%
            {
                //if place_meeting(x,y,o_tile_arrows)
                {
                dropped_arrows=instance_create(x,y,o_tile_arrows)
                
                dropped_arrows.sprite_index=s_item_arrows
                dropped_arrows.name="Arrows"
                dropped_arrows.type="arrows"
                dropped_arrows.amount=1
                }

            }

        }//LOOP
        else//if fire=false
        {
        global.ranged_attack=false
        instance_destroy()
        }
}

if attack_type="throwing_spears"//############################################################
{
add_message("You throw a Throwing Spear.")

        if fire=true
        {

        for (i=0 i&lt;20 i+=1)
                {            
                if global.item[i,2]="throwing_spears"
                    {
                    global.item[i,3]-=1
            
                    if global.item[i,3]=0
                        {
                        global.item[i,0]=""
                        global.item[i,1]=s_item_none
                        global.item[i,2]=""
                        global.item[i,3]=0
                        global.item[i,4]="inventory"
                        }
                    break
                    }
                }



            with(o_player)
            {
            arrow=instance_create(x,y,o_arrow)
            arrow.sprite_index=s_spear
            arrow.image_angle=point_direction(x,y,o_aim,o_aim)
            arrow.destx=o_aim.x
            arrow.desty=o_aim.y
            if global.sound=true {sound_play(snd_arrow)}
            }

        if place_meeting(x,y,p_enemy)
        {
            calling_other=instance_nearest(x,y,p_enemy)

            var oppo_name;
            oppo_name=calling_other.name

            own_atk=random((global.player_total_int+global.player_total_dex)/2)
            oppo_def=random(calling_other.total_dex/2+calling_other.total_ev)
    
            if (own_atk&gt;oppo_def)
                {
                var damage;
        
                damage=round(random(global.player_total_str))-(round(calling_other.total_ac+(calling_other.total_str/8)*1.5))
        
                if (damage&gt;0)
                    {
                    calling_other.healthnow-=damage
            
                    //DAMAGE MESSAGE
                    add_message("You deal " +string(damage) + string(' damage to ')+string(oppo_name)+string('.'),0)
            
                    //KILL MESSAGE
                    if (calling_other.healthnow&lt;=0)
                        {
                        add_message("You killed " +string(oppo_name)+string('.'),16)
                        }
                    }
                    else
                    add_message("You miss.",0)
                }
                else
                add_message("You miss.",0)
            }

            global.ranged_attack=false
            instance_destroy()

            if floor(random(1.6))=0//63%
            {
                //if place_meeting(x,y,o_tile_arrows)
                {
                dropped_arrows=instance_create(x,y,o_tile_arrows)
                
                dropped_arrows.sprite_index=s_item_throwing_spears
                dropped_arrows.name="Throwing Spears"
                dropped_arrows.type="throwing_spears"
                dropped_arrows.amount=1
                }

            }

        }//LOOP
        else//if fire=false
        {
        global.ranged_attack=false
        instance_destroy()
        }
}

if attack_type="throwing_axes"//#############################################################
{
add_message("You throw a Throwing Axe.")

        if fire=true
        {

        for (i=0 i&lt;20 i+=1)
                {            
                if global.item[i,2]="throwing_axes"
                    {
                    global.item[i,3]-=1
            
                    if global.item[i,3]=0
                        {
                        global.item[i,0]=""
                        global.item[i,1]=s_item_none
                        global.item[i,2]=""
                        global.item[i,3]=0
                        global.item[i,4]="inventory"
                        }
                    break
                    }
                }



            with(o_player)
            {
            arrow=instance_create(x,y,o_arrow)
            arrow.sprite_index=s_axe
            arrow.image_angle=point_direction(x,y,o_aim,o_aim)
            arrow.destx=o_aim.x
            arrow.desty=o_aim.y
            if global.sound=true {sound_play(snd_arrow)}
            }

        if place_meeting(x,y,p_enemy)
        {
            calling_other=instance_nearest(x,y,p_enemy)

            var oppo_name;
            oppo_name=calling_other.name

            own_atk=random((global.player_total_int+global.player_total_dex)/2)
            oppo_def=random(calling_other.total_dex/2+calling_other.total_ev)
    
            if (own_atk&gt;oppo_def)
                {
                var damage;
        
                damage=round(random(global.player_total_str))-(round(calling_other.total_ac+(calling_other.total_str/8)*1.3))
        
                if (damage&gt;0)
                    {
                    calling_other.healthnow-=damage
            
                    //DAMAGE MESSAGE
                    add_message("You deal " +string(damage) + string(' damage to ')+string(oppo_name)+string('.'),0)
            
                    //KILL MESSAGE
                    if (calling_other.healthnow&lt;=0)
                        {
                        add_message("You killed " +string(oppo_name)+string('.'),16)
                        }
                    }
                    else
                    add_message("You miss.",0)
                }
                else
                add_message("You miss.",0)
            }

            global.ranged_attack=false
            instance_destroy()

            if floor(random(1.3))=0//76%
            {
                //if place_meeting(x,y,o_tile_arrows)
                {
                dropped_arrows=instance_create(x,y,o_tile_arrows)
                
                dropped_arrows.sprite_index=s_item_throwing_axes
                dropped_arrows.name="Throwing Axes"
                dropped_arrows.type="throwing_axes"
                dropped_arrows.amount=1
                }

            }

        }//LOOP
        else//if fire=false
        {
        global.ranged_attack=false
        instance_destroy()
        }
}

if attack_type="fireball"//##################################################
{
add_message("You cast a fiery energy ball.")
        if fire=true
        {
            with(o_player)
            {
            arrow=instance_create(x,y,o_arrow)
            arrow.image_angle=point_direction(x,y,o_aim,o_aim)
            arrow.sprite_index=s_magic_red
            arrow.type="fireball"
            arrow.destx=o_aim.x
            arrow.desty=o_aim.y
            if global.sound=true {sound_play(snd_magic)}
            }

        if place_meeting(x,y,p_enemy)
        {
            calling_other=instance_nearest(x,y,p_enemy)

            var oppo_name;
            oppo_name=calling_other.name

            own_atk=random(global.player_total_int)
            oppo_def=random(calling_other.total_int)
    
            if (own_atk&gt;oppo_def)
                {
                var damage;
        
                damage=round(random(global.player_total_int*damage_modifier))
        
                if (damage&gt;0)
                    {
                    calling_other.healthnow-=damage
                    calling_other.movement_stopped=0
            
                    //DAMAGE MESSAGE
                    add_message("You deal " +string(damage) + string(' damage to ')+string(oppo_name)+string('.'),0)
            
                    //KILL MESSAGE
                    if (calling_other.healthnow&lt;=0)
                        {
                        add_message("You killed " +string(oppo_name)+string('.'),16)
                        }
                    }
                    else
                    add_message("You miss.",0)
                }
                else
                add_message("You miss.",0)
        }

        global.ranged_attack=false
        instance_destroy()

        }
        else
        {
        global.ranged_attack=false
        instance_destroy()
        }
}

if attack_type="ice_shard"//##################################################
{
add_message("You cast a sharp icy shard.")

        if fire=true
        {
            with(o_player)
            {
            arrow=instance_create(x,y,o_arrow)
            arrow.image_angle=point_direction(x,y,o_aim,o_aim)
            arrow.sprite_index=s_magic_blue
            arrow.destx=o_aim.x
            arrow.desty=o_aim.y
            if global.sound=true {sound_play(snd_magic)}
            }

        if place_meeting(x,y,p_enemy)
        {
            calling_other=instance_nearest(x,y,p_enemy)

            var oppo_name;
            oppo_name=calling_other.name

            own_atk=random(global.player_total_int)
            oppo_def=random(calling_other.total_int)
    
            if (own_atk&gt;oppo_def)
                {
                var damage;
        
                if calling_other.movement_stopped&gt;0
                {damage_modifier=damage_modifier*2}
                
                damage=round(random(global.player_total_int*damage_modifier))
        
                if (damage&gt;0)
                    {
                    calling_other.healthnow-=damage
                    
                    if floor(random(1.99))=0 //1/2
                        {
                        add_message("" +string(string_replace(oppo_name,'the ','The ')) + string(' is frozen.'),0)
                        calling_other.movement_stopped=6
                        }
            
                    //DAMAGE MESSAGE
                    add_message("You deal " +string(damage) + string(' damage to ')+string(oppo_name)+string('.'),0)
            
                    //KILL MESSAGE
                    if (calling_other.healthnow&lt;=0)
                        {
                        add_message("You killed " +string(oppo_name)+string('.'),16)
                        }
                    }
                    else
                    add_message("You miss.",0)
                }
                else
                add_message("You miss.",0)
        }

        global.ranged_attack=false
        instance_destroy()

        }
        else
        {
        global.ranged_attack=false
        instance_destroy()
        }
}

if attack_type="freeze"//##################################################
{
add_message("Freezing wind blows wildly.")

        if fire=true
        {
            if global.sound=true {sound_play(snd_magic)}
            a=instance_create(x+8,y+8,o_aoe_magic)
            a.damage_modifier=damage_modifier
            a.sprite_index=s_magic_blue
            a.type="freeze"
            a=instance_create(x+16+8,y+8,o_aoe_magic)
            a.damage_modifier=damage_modifier
            a.sprite_index=s_magic_blue
            a.type="freeze"
            a=instance_create(x+16+8,y+16+8,o_aoe_magic)
            a.damage_modifier=damage_modifier
            a.sprite_index=s_magic_blue
            a.type="freeze"
            a=instance_create(x+8,y+16+8,o_aoe_magic)
            a.damage_modifier=damage_modifier
            a.sprite_index=s_magic_blue
            a.type="freeze"
            a=instance_create(x-16+8,y+16+8,o_aoe_magic)
            a.damage_modifier=damage_modifier
            a.sprite_index=s_magic_blue
            a.type="freeze"
            a=instance_create(x-16+8,y+8,o_aoe_magic)
            a.damage_modifier=damage_modifier
            a.sprite_index=s_magic_blue
            a.type="freeze"
            a=instance_create(x-16+8,y-16+8,o_aoe_magic)
            a.damage_modifier=damage_modifier
            a.sprite_index=s_magic_blue
            a.type="freeze"
            a=instance_create(x+8,y-16+8,o_aoe_magic)
            a.damage_modifier=damage_modifier
            a.sprite_index=s_magic_blue
            a.type="freeze"
            a=instance_create(x+16+8,y-16+8,o_aoe_magic)
            a.damage_modifier=damage_modifier
            a.sprite_index=s_magic_blue
            a.type="freeze"
        

            global.ranged_attack=false
            instance_destroy()

        }
        else
        {
        global.ranged_attack=false
        instance_destroy()
        }
}

if attack_type="snakebite"//##################################################
{
add_message("You cast a poisonous sting.")

        if fire=true
        {
            with(o_player)
            {
            arrow=instance_create(x,y,o_arrow)
            arrow.image_angle=point_direction(x,y,o_aim,o_aim)
            arrow.sprite_index=s_magic_green
            arrow.destx=o_aim.x
            arrow.desty=o_aim.y
            if global.sound=true {sound_play(snd_magic)}
            }

        if place_meeting(x,y,p_enemy)
        {
            calling_other=instance_nearest(x,y,p_enemy)

            var oppo_name;
            oppo_name=calling_other.name

            own_atk=random(global.player_total_int)
            oppo_def=random(calling_other.total_int)
    
            if (own_atk&gt;oppo_def)
                {
                var damage;
                
                damage=round(random(global.player_total_int*damage_modifier))
        
                if (damage&gt;0)
                    {
                    calling_other.healthnow-=damage
                    
                    if floor(random(1.99))=0 //1/2
                        {
                        add_message("" +string(string_replace(oppo_name,'the ','The ')) + string(' is poisoned.'),0)
                        calling_other.poison=global.player_total_int
                        }
            
                    //DAMAGE MESSAGE
                    add_message("You deal " +string(damage) + string(' damage to ')+string(oppo_name)+string('.'),0)
            
                    //KILL MESSAGE
                    if (calling_other.healthnow&lt;=0)
                        {
                        add_message("You killed " +string(oppo_name)+string('.'),16)
                        }
                    }
                    else
                    add_message("You miss.",0)
                }
                else
                add_message("You miss.",0)
        }

        global.ranged_attack=false
        instance_destroy()

        }
        else
        {
        global.ranged_attack=false
        instance_destroy()
        }
}

if attack_type="drain_life"//##################################################
{
add_message("You create a dark warp.")

        if fire=true
        {
            with(o_player)
            {
            arrow=instance_create(x,y,o_arrow)
            arrow.image_angle=point_direction(x,y,o_aim,o_aim)
            arrow.sprite_index=s_magic_blood
            arrow.destx=o_aim.x
            arrow.desty=o_aim.y
            if global.sound=true {sound_play(snd_magic)}
            }

        if place_meeting(x,y,p_enemy)
        {
            calling_other=instance_nearest(x,y,p_enemy)

            var oppo_name;
            oppo_name=calling_other.name

            own_atk=random(global.player_total_int)
            oppo_def=random(calling_other.total_int)
    
            if (own_atk&gt;oppo_def)
                {
                var damage;
                
                damage=round(random(global.player_total_int*damage_modifier))
        
                if (damage&gt;0)
                    {
                    calling_other.healthnow-=damage
                    
                    global.player_healthnow+=damage
                    
                    if global.player_healthnow&gt;global.player_healthmax
                    {
                    global.player_healthnow=global.player_healthmax
                    }
                    add_message("You gain +"+string(damage)+string(" health."))
            
                    //DAMAGE MESSAGE
                    add_message("You deal " +string(damage) + string(' damage to ')+string(oppo_name)+string('.'),0)
            
                    //KILL MESSAGE
                    if (calling_other.healthnow&lt;=0)
                        {
                        add_message("You killed " +string(oppo_name)+string('.'),16)
                        }
                    }
                    else
                    add_message("You miss.",0)
                }
                else
                add_message("You miss.",0)
        }

        global.ranged_attack=false
        instance_destroy()

        }
        else
        {
        global.ranged_attack=false
        instance_destroy()
        }
}

if attack_type="blink"//##################################################
{
add_message("You blink to the new position.")

        if fire=true
        {
            with(o_player)
            {
            arrow=instance_create(x,y,o_arrow)
            arrow.image_angle=point_direction(x,y,o_aim,o_aim)
            arrow.sprite_index=s_magic_purple
            arrow.destx=o_aim.x
            arrow.desty=o_aim.y
            if global.sound=true {sound_play(snd_magic)}
            }

        if !place_meeting(x,y,p_enemy)
        {
        o_player.x=x
        o_player.y=y
        
        global.ranged_attack=false
        instance_destroy()
        }


        }
        else
        {
        global.ranged_attack=false
        instance_destroy()
        }
}

if attack_type="confusion"//##################################################
{
add_message("You mumble strange words.")

        if fire=true
        {
            with(o_player)
            {
            arrow=instance_create(x,y,o_arrow)
            arrow.image_angle=point_direction(x,y,o_aim,o_aim)
            arrow.sprite_index=s_magic_purple
            arrow.destx=o_aim.x
            arrow.desty=o_aim.y
            if global.sound=true {sound_play(snd_magic)}
            }

        if place_meeting(x,y,p_enemy)
        {
            calling_other=instance_nearest(x,y,p_enemy)

            var oppo_name;
            oppo_name=calling_other.name

            own_atk=random(global.player_total_int)
            oppo_def=random(calling_other.total_int)
    
            if (own_atk&gt;oppo_def)
                {
                
                    calling_other.confusion=999

                    //DAMAGE MESSAGE
                    add_message("" +string(string_replace(oppo_name,'the ','The ')) + string(" is confused. "),0)
            
                    //KILL MESSAGE
                    if (calling_other.healthnow&lt;=0)
                        {
                        add_message("You killed " +string(oppo_name)+string('.'),16)
                        }

                }
                else
                add_message("You miss.",0)
        }

        global.ranged_attack=false
        instance_destroy()

        }
        else
        {
        global.ranged_attack=false
        instance_destroy()
        }
}

if attack_type="magic_dart"//##################################################
{
add_message("You cast a magic dart.")

        if fire=true
        {
            with(o_player)
            {
            arrow=instance_create(x,y,o_arrow)
            arrow.image_angle=point_direction(x,y,o_aim,o_aim)
            arrow.sprite_index=s_magic_purple
            arrow.destx=o_aim.x
            arrow.desty=o_aim.y
            if global.sound=true {sound_play(snd_magic)}
            }

        if place_meeting(x,y,p_enemy)
        {
            calling_other=instance_nearest(x,y,p_enemy)

            var oppo_name;
            oppo_name=calling_other.name

            own_atk=random(global.player_total_int)
            oppo_def=random(calling_other.total_int)
    
            if (own_atk&gt;oppo_def)
                {
                var damage;
                
                damage=round(random(global.player_total_int*damage_modifier))
        
                if (damage&gt;0)
                    {
                    calling_other.healthnow-=damage
            
                    //DAMAGE MESSAGE
                    add_message("You deal " +string(damage) + string(' damage to ')+string(oppo_name)+string('.'),0)
            
                    //KILL MESSAGE
                    if (calling_other.healthnow&lt;=0)
                        {
                        add_message("You killed " +string(oppo_name)+string('.'),16)
                        }
                    }
                    else
                    add_message("You miss.",0)
                }
                else
                add_message("You miss.",0)
        }

        global.ranged_attack=false
        instance_destroy()

        }
        else
        {
        global.ranged_attack=false
        instance_destroy()
        }
}


if attack_type="banish"//##################################################
{
add_message("You try to banish target soul.")

        if fire=true
        {
            with(o_player)
            {
            arrow=instance_create(x,y,o_arrow)
            arrow.image_angle=point_direction(x,y,o_aim,o_aim)
            arrow.sprite_index=s_magic_white
            arrow.destx=o_aim.x
            arrow.desty=o_aim.y
            if global.sound=true {sound_play(snd_magic)}
            }

        if place_meeting(x,y,p_enemy)
        {
            calling_other=instance_nearest(x,y,p_enemy)

            var oppo_name;
            oppo_name=calling_other.name
            
            if oppo_name="the skeleton" || oppo_name="the zombie" || oppo_name="the ghoul"
            {damage_modifier=1.75}

            own_atk=random(global.player_total_int)
            oppo_def=random(calling_other.total_int)
    
            if (own_atk&gt;oppo_def)
                {
                var damage;
                
                damage=round(random(global.player_total_int*damage_modifier))
        
                if (damage&gt;0)
                    {
                    calling_other.healthnow-=damage
            
                    //DAMAGE MESSAGE
                    add_message("You deal " +string(damage) + string(' damage to ')+string(oppo_name)+string('.'),0)
            
                    //KILL MESSAGE
                    if (calling_other.healthnow&lt;=0)
                        {
                        add_message("You killed " +string(oppo_name)+string('.'),16)
                        }
                    }
                    else
                    add_message("You miss.",0)
                }
                else
                add_message("You miss.",0)
        }

        global.ranged_attack=false
        instance_destroy()

        }
        else
        {
        global.ranged_attack=false
        instance_destroy()
        }
}


if attack_type="devastation"//##################################################
{
add_message("You cast a devastation.")

        if fire=true
        {
            with(o_player)
            {
            arrow=instance_create(x,y,o_arrow)
            arrow.image_angle=point_direction(x,y,o_aim,o_aim)
            arrow.sprite_index=s_magic_red
            arrow.destx=o_aim.x
            arrow.desty=o_aim.y
            if global.sound=true {sound_play(snd_magic)}
            }

        if place_meeting(x,y,p_enemy)
        {
            calling_other=instance_nearest(x,y,p_enemy)

            var oppo_name;
            oppo_name=calling_other.name

            own_atk=random(global.player_total_int)
            oppo_def=random(calling_other.total_int)
    
            if (own_atk&gt;oppo_def)
                {
                var damage;
                
                damage=round(random(global.player_total_int*damage_modifier))
        
                if (damage&gt;0)
                    {
                    calling_other.healthnow-=damage
            
                    //DAMAGE MESSAGE
                    add_message("You deal " +string(damage) + string(' damage to ')+string(oppo_name)+string('.'),0)
            
                    //KILL MESSAGE
                    if (calling_other.healthnow&lt;=0)
                        {
                        add_message("You killed " +string(oppo_name)+string('.'),16)
                        }
                    }
                    else
                    add_message("You miss.",0)
                }
                else
                add_message("You miss.",0)
        }

        global.ranged_attack=false
        instance_destroy()

        }
        else
        {
        global.ranged_attack=false
        instance_destroy()
        }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if fire=true
{
draw_set_color(c_green)
}
else
draw_set_color(c_red)

draw_set_alpha(0.4)
draw_rectangle(x,y,x+16,y+16,0)
draw_set_alpha(1)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if !keyboard_check_pressed(ord('B')) || !keyboard_check_pressed(ord('C'))
{
global.ranged_attack=false
instance_destroy()
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
