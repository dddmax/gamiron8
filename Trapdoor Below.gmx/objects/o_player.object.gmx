<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_player_blank</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>p_solid</parentName>
  <maskName>wall_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//OTHER
press_delay=7
regen=10

switch(global.race)
{
    case 0: {sprite_index=s_player_blank break}
    case 1: {sprite_index=s_player_elf_blank break}
    case 2: {sprite_index=s_player_undead_blank break}
    case 3: {sprite_index=s_player_vampire_blank break}
    case 4: {sprite_index=s_player_troll_blank break}
    case 5: {sprite_index=s_player_dwarf_blank break}
    case 6: {sprite_index=s_player_angel_blank break}
    case 7: {sprite_index=s_player_goblin_blank break}
    case 8: {sprite_index=s_player_wraith_blank break}
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,o_tile_blood)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(o_generate_map)
{
  instance_activate_all()
  instance_deactivate_region(view_xview[0]-16,view_yview[0]-16,view_wview[0]+16,view_hview[0]+16,0,1)
  
  instance_activate_object(o_controller)
  instance_activate_object(o_aim)
  instance_activate_object(o_icon_sounds)
  instance_activate_object(o_generate_map)
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room=room_tutorial_land
{
if o_tutorial_guy.i=0
exit
}

if !instance_exists(o_generate_map) &amp;&amp; global.level_up=false
{

if (keyboard_check(vk_numpad2) || 
keyboard_check(vk_numpad3) ||
keyboard_check(vk_numpad6) ||
keyboard_check(vk_numpad9) ||
keyboard_check(vk_numpad5) ||
keyboard_check(vk_numpad8) ||
keyboard_check(vk_numpad7) ||
keyboard_check(vk_numpad4) ||
keyboard_check(vk_numpad1) ||
keyboard_check(vk_up)      ||
keyboard_check(vk_down)    ||
keyboard_check(vk_left)    ||
keyboard_check(vk_right)   ||
keyboard_check(vk_control) &amp;&amp; press_delay&gt;0)
{press_delay-=1}

if (keyboard_check_released(vk_numpad2) || 
keyboard_check_released(vk_numpad3) ||
keyboard_check_released(vk_numpad6) ||
keyboard_check_released(vk_numpad9) ||
keyboard_check_released(vk_numpad8) ||
keyboard_check_released(vk_numpad5) ||
keyboard_check_released(vk_numpad7) ||
keyboard_check_released(vk_numpad4) ||
keyboard_check_released(vk_numpad1) ||
keyboard_check_released(vk_up)      ||
keyboard_check_released(vk_down)    ||
keyboard_check_released(vk_left)    ||
keyboard_check_released(vk_right)   ||
keyboard_check_released(vk_control))
{press_delay=15}

//DELAYED
if keyboard_check(vk_numpad2) || keyboard_check(vk_down)
    {
    if (!place_meeting(x,y+16,p_wall) &amp;&amp; press_delay=0)
        {
        if !place_meeting(x,y+16,p_enemy)
        {if global.sound=true {sound_play(snd_steps)}}
        y+=16
        normalize_stats()
        }
    }
if keyboard_check(vk_numpad3)
    {
    if (!place_meeting(x+16,y+16,p_wall) &amp;&amp; press_delay=0)
    {
        {
        if !place_meeting(x+16,y+16,p_enemy)
        {if global.sound=true {sound_play(snd_steps)}}
        x+=16 
        y+=16
        normalize_stats()}
        }
    
    }
if keyboard_check(vk_numpad6) || keyboard_check(vk_right)
    {
    if (!place_meeting(x+16,y,p_wall) &amp;&amp; press_delay=0)
        {
        if !place_meeting(x+16,y,p_enemy)
        {if global.sound=true {sound_play(snd_steps)}}
        x+=16 
        normalize_stats()
        }
    }
if keyboard_check(vk_numpad9)
    {
    if (!place_meeting(x+16,y-16,p_wall) &amp;&amp; press_delay=0)
        {
        if !place_meeting(x+16,y-16,p_enemy)
        {if global.sound=true {sound_play(snd_steps)}}
        x+=16 y-=16
        normalize_stats()
        }

    }
if keyboard_check(vk_numpad8) || keyboard_check(vk_up)
    {
    if (!place_meeting(x,y-16,p_wall) &amp;&amp; press_delay=0)
        {
        if !place_meeting(x,y-16,p_enemy)
        {if global.sound=true {sound_play(snd_steps)}}
        y-=16
        normalize_stats()
        }
    }
if keyboard_check(vk_numpad7)
    {
    if (!place_meeting(x-16,y-16,p_wall) &amp;&amp; press_delay=0)
        {
        if !place_meeting(x-16,y-16,p_enemy)
        {if global.sound=true {sound_play(snd_steps)}}
        x-=16 y-=16 
        normalize_stats()
        }
    }
if keyboard_check(vk_numpad4) || keyboard_check(vk_left)
    {
    if (!place_meeting(x-16,y,p_wall) &amp;&amp; press_delay=0)
        {
        if !place_meeting(x-16,y,p_enemy)
        {if global.sound=true {sound_play(snd_steps)}}
        x-=16 
        normalize_stats()
        }
    }
if keyboard_check(vk_numpad1)
    {
    if (!place_meeting(x-16,y+16,p_wall) &amp;&amp; press_delay=0)
        {
        if !place_meeting(x-16,y+16,p_enemy)
        {if global.sound=true {sound_play(snd_steps)}}
        x-=16 y+=16
        normalize_stats()
        }
    }
if keyboard_check(vk_numpad5) || keyboard_check(vk_control)
    {
    if press_delay=0
    {normalize_stats()}
    }
//PRESSED 
if keyboard_check_pressed(vk_numpad2) || keyboard_check_pressed(vk_down)
    {
    if (!place_meeting(x,y+16,p_wall))
        {
        if !place_meeting(x,y+16,p_enemy)
        {if global.sound=true {sound_play(snd_steps)}}
        y+=16 
        normalize_stats()
        
        if room=room_tutorial_land { o_tutorial_guy.move_down=true }
        }
    }
if keyboard_check_pressed(vk_numpad3)
    {
    if (!place_meeting(x+16,y+16,p_wall))
        {
        if !place_meeting(x+16,y+16,p_enemy)
        {if global.sound=true {sound_play(snd_steps)}}
        x+=16 y+=16 
        normalize_stats()
             
        if room=room_tutorial_land { o_tutorial_guy.move_down=true o_tutorial_guy.move_right=true }
        }
    }
if keyboard_check_pressed(vk_numpad6) || keyboard_check_pressed(vk_right)
    {
    if (!place_meeting(x+16,y,p_wall))
        {
        if !place_meeting(x+16,y,p_enemy)
        {if global.sound=true {sound_play(snd_steps)}}
        x+=16 
        normalize_stats()
        
        if room=room_tutorial_land { o_tutorial_guy.move_right=true }
        }
    }
if keyboard_check_pressed(vk_numpad9)
    {
    if (!place_meeting(x+16,y-16,p_wall))
        {
        if !place_meeting(x+16,y-16,p_enemy)
        {if global.sound=true {sound_play(snd_steps)}}
        x+=16 y-=16 
        normalize_stats()
        
        if room=room_tutorial_land { o_tutorial_guy.move_up=true o_tutorial_guy.move_right=true }
        }
    }
    
if keyboard_check_pressed(vk_numpad8) || keyboard_check_pressed(vk_up)
    {
    if (!place_meeting(x,y-16,p_wall))
        {
        if !place_meeting(x,y-16,p_enemy)
        {if global.sound=true {sound_play(snd_steps)}}
        y-=16 
        normalize_stats()
        
        if room=room_tutorial_land { o_tutorial_guy.move_up=true}
        }
    }
if keyboard_check_pressed(vk_numpad7)
    {
    if (!place_meeting(x-16,y-16,p_wall))
        {
        if !place_meeting(x-16,y-16,p_enemy)
        {if global.sound=true {sound_play(snd_steps)}}
        x-=16 y-=16 
        normalize_stats()
        
        if room=room_tutorial_land { o_tutorial_guy.move_up=true o_tutorial_guy.move_left=true }
        }
    }
if keyboard_check_pressed(vk_numpad4) || keyboard_check_pressed(vk_left)
    {
    if (!place_meeting(x-16,y,p_wall))
        {
        if !place_meeting(x-16,y,p_enemy)
        {if global.sound=true {sound_play(snd_steps)}}
        x-=16 
        normalize_stats()
        
        if room=room_tutorial_land { o_tutorial_guy.move_left=true }
        }
    }
if keyboard_check_pressed(vk_numpad1)
    {
    if (!place_meeting(x-16,y+16,p_wall))
        {
        if !place_meeting(x-16,y+16,p_enemy)
        {if global.sound=true {sound_play(snd_steps)}}
        x-=16 y+=16 
        normalize_stats()
        
        if room=room_tutorial_land { o_tutorial_guy.move_down=true o_tutorial_guy.move_left=true }
        }
    }
if keyboard_check_pressed(vk_numpad5) || keyboard_check_pressed(vk_control)
    {
    normalize_stats()
    }
    
}

    
//NOT OVER ENEMIES
if place_meeting(x,y,p_enemy)
{
calling_other=instance_nearest(x,y,p_enemy)

x=xprevious
y=yprevious

if global.player_rage&gt;0
{
cast_spell_aoe("fiery_rage",0.5,0)
}
if global.sound=true {sound_play(snd_swing)}
var oppo_name;
oppo_name=calling_other.name

own_atk=random((global.player_total_str+global.player_total_dex)/2)
oppo_def=random((calling_other.total_dex/2)+calling_other.total_ev)

if (own_atk&gt;oppo_def)
        {
        var damage;
        
        damage=round(random(global.player_total_str))-round(random(calling_other.total_ac+(calling_other.total_str/8)))
        
        if global.race=3//vampire
        {
        global.player_healthnow+=round(damage*0.5)
        add_message("You stole "+string(round(damage*0.5))+string(" life."))
        }
        
        if global.race=4//rage troll
        {
        if global.player_mananow&gt;=3
            {
            add_message("Your rage drains your mana.")
            global.player_mananow-=3
            damage=round(damage*1.3)
            }
        }
        
        
        if (damage&gt;0)
            {
            calling_other.healthnow-=damage
            if global.sound=true {sound_play(snd_hit)}
            //DAMAGE MESSAGE
            add_message("You deal " +string(damage) + string(' damage to ')+string(oppo_name)+string('.'),0)
            
            //KILL MESSAGE
            if (calling_other.healthnow&lt;=0)
                {
                add_message("You killed " +string(oppo_name)+string('.'),16)
                }
            }
            else
            add_message("You miss.",0)
        }
        else
        add_message("You miss.",0)
}

if global.player_crippled&gt;0
{
x=xprevious
y=yprevious
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.player_invisible&gt;0
{
image_blend=c_ltgray
image_alpha=0.3
}
else
{
image_blend=c_white
image_alpha=1
}

if global.player_healthnow&lt;=0
{
add_message("You fall down...and die...",16)
instance_destroy()
}

//REGEN
if regen&lt;=0 &amp;&amp; global.player_healthnow&gt;0
    {
    
        regen=10
        
        if (global.race&lt;3 || global.race&gt;3)//undead proof
            {
            global.player_healthnow+=round(global.player_healthmax*0.1)
            
            if global.race=4//troll
                {
                global.player_healthnow+=round(global.player_healthmax*0.1)
                }
            }
        global.player_mananow+=round(global.player_manamax*0.2)
        
        if global.player_healthnow&gt;global.player_healthmax 
            {
            global.player_healthnow=global.player_healthmax
            }
            
        if global.player_mananow&gt;global.player_manamax 
            {
            global.player_mananow=global.player_manamax
            }
    
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_tile_stairs_down">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(vk_space) &amp;&amp; !(place_meeting(x,y,p_item))
{
    if global.allow_highscores=false
    {
    game_save("autosave.tdb")
    global.savetimer=30*2
    }
    else
    global.savetimer=0

    if global.dungeon_level&lt;20
    {    
    global.dungeon_level+=1
    global.ranged_attack=false
    
    room_restart()
    }
    else
    {
    room_goto_next()
    global.player_killedby='survived!'
    }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Body
draw_sprite_ext(sprite_index,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)

for (i=0 i&lt;20 i+=1)
    {
    if global.item[i,4]="used"
        {    
        //Boots &amp; gloves
        if global.item[i,1]=s_item_boots{draw_sprite_ext(s_player_boots,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_boots2{draw_sprite_ext(s_player_boots2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_boots3{draw_sprite_ext(s_player_boots3,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_boots4{draw_sprite_ext(s_player_boots4,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_boots5{draw_sprite_ext(s_player_boots5,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_boots6{draw_sprite_ext(s_player_boots6,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_gloves{draw_sprite_ext(s_player_gloves,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_gloves2{draw_sprite_ext(s_player_gloves2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_gloves3{draw_sprite_ext(s_player_gloves3,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_gloves4{draw_sprite_ext(s_player_gloves4,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_gloves5{draw_sprite_ext(s_player_gloves5,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_gloves6{draw_sprite_ext(s_player_gloves6,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        }
    }
for (i=0 i&lt;20 i+=1)
    {
    if global.item[i,4]="used"
        {
        //Armour
        if global.item[i,1]=s_item_reinforced_armour{draw_sprite_ext(s_player_reinforced_armour,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_leather_armour{draw_sprite_ext(s_player_leather_armour,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_chainmail{draw_sprite_ext(s_player_chainmail,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_scale_armour{draw_sprite_ext(s_player_scale_armour,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_scale_armour2{draw_sprite_ext(s_player_scale_armour2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_platemail{draw_sprite_ext(s_player_platemail,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_platemail2{draw_sprite_ext(s_player_platemail2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_cloak{draw_sprite_ext(s_player_cloak,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_cloak2{draw_sprite_ext(s_player_cloak2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_cloak3{draw_sprite_ext(s_player_cloak3,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_robe{draw_sprite_ext(s_player_robe,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_robe2{draw_sprite_ext(s_player_robe2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_robe3{draw_sprite_ext(s_player_robe3,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_robe4{draw_sprite_ext(s_player_robe4,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_robe5{draw_sprite_ext(s_player_robe5,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        }
    }  
for (i=0 i&lt;20 i+=1)
    {
    if global.item[i,4]="used"
        {
        //Amulets
        if global.item[i,1]=s_item_amulet_gold{draw_sprite_ext(s_player_amulet_gold,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_amulet_holy{draw_sprite_ext(s_player_amulet_holy,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_amulet_evil{draw_sprite_ext(s_player_amulet_evil,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_amulet_white{draw_sprite_ext(s_player_amulet_white,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_amulet_purple{draw_sprite_ext(s_player_amulet_purple,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_amulet_blue{draw_sprite_ext(s_player_amulet_blue,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_amulet_orange{draw_sprite_ext(s_player_amulet_orange,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_amulet_red{draw_sprite_ext(s_player_amulet_red,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        }
    }
    
for (i=0 i&lt;20 i+=1)
    {
    if global.item[i,4]="used"
        {
        //Helmets
        if global.item[i,1]=s_item_helmet{draw_sprite_ext(s_player_helmet,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_helmet2{draw_sprite_ext(s_player_helmet2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_helmet3{draw_sprite_ext(s_player_helmet3,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_helmet4{draw_sprite_ext(s_player_helmet4,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_helmet5{draw_sprite_ext(s_player_helmet5,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_helmet6{draw_sprite_ext(s_player_helmet,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        }
    }
for (i=0 i&lt;20 i+=1)
    {
    if global.item[i,4]="used"
        {
        //Weapons &amp; shields
        if global.item[i,1]=s_item_dagger{draw_sprite_ext(s_player_dagger,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_sword{draw_sprite_ext(s_player_sword,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_bastard_sword{draw_sprite_ext(s_player_bastard_sword,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_handaxe{draw_sprite_ext(s_player_hand_axe,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_greataxe{draw_sprite_ext(s_player_great_axe,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_spear{draw_sprite_ext(s_player_spear,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_hammer{draw_sprite_ext(s_player_hammer,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_pickaxe{draw_sprite_ext(s_player_pickaxe,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_buckler{draw_sprite_ext(s_player_buckler,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_buckler2{draw_sprite_ext(s_player_buckler2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_tower_shield{draw_sprite_ext(s_player_tower_shield,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_tower_shield2{draw_sprite_ext(s_player_tower_shield2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_heater_shield{draw_sprite_ext(s_player_heater_shield,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_heater_shield2{draw_sprite_ext(s_player_heater_shield2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_heater_shield3{draw_sprite_ext(s_player_heater_shield3,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_spiked_shield{draw_sprite_ext(s_player_spiked_shield,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_hunting_bow{draw_sprite_ext(s_player_hunting_bow,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_short_bow{draw_sprite_ext(s_player_short_bow,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_long_bow{draw_sprite_ext(s_player_long_bow,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_recurve_bow{draw_sprite_ext(s_player_recurve_bow,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_elven_bow{draw_sprite_ext(s_player_elven_bow,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_cross_bow{draw_sprite_ext(s_player_cross_bow,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_war_bow{draw_sprite_ext(s_player_war_bow,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_staff_illusion{draw_sprite_ext(s_player_staff_illusion,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_staff_death{draw_sprite_ext(s_player_staff_death,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_staff_holy{draw_sprite_ext(s_player_staff_holy,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_staff_blood{draw_sprite_ext(s_player_staff_evil,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_staff_brass{draw_sprite_ext(s_player_staff_brass,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_staff_ice{draw_sprite_ext(s_player_staff_blue,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_staff_fire{draw_sprite_ext(s_player_staff_red,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_staff_nature{draw_sprite_ext(s_player_staff_green,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        
        }
    }
/*
//Body
draw_sprite_ext(sprite_index,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)


for (i=0 i&lt;20 i+=1)
    {
    if global.item[i,4]="used"
        {
        //Armour
        if global.item[i,1]=s_item_reinforced_armour{draw_sprite_ext(s_player_reinforced_armour,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_leather_armour{draw_sprite_ext(s_player_leather_armour,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_chainmail{draw_sprite_ext(s_player_chainmail,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_scale_armour{draw_sprite_ext(s_player_scale_armour,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_scale_armour2{draw_sprite_ext(s_player_scale_armour2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_platemail{draw_sprite_ext(s_player_platemail,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_platemail2{draw_sprite_ext(s_player_platemail2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_cloak{draw_sprite_ext(s_player_cloak,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_cloak2{draw_sprite_ext(s_player_cloak2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_cloak3{draw_sprite_ext(s_player_cloak3,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_robe{draw_sprite_ext(s_player_robe,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_robe2{draw_sprite_ext(s_player_robe2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_robe3{draw_sprite_ext(s_player_robe3,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_robe4{draw_sprite_ext(s_player_robe4,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_robe5{draw_sprite_ext(s_player_robe5,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        
        //Boots &amp; gloves
        if global.item[i,1]=s_item_boots{draw_sprite_ext(s_player_boots,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_boots2{draw_sprite_ext(s_player_boots2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_boots3{draw_sprite_ext(s_player_boots3,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_boots4{draw_sprite_ext(s_player_boots4,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_boots5{draw_sprite_ext(s_player_boots5,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_boots6{draw_sprite_ext(s_player_boots6,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_gloves{draw_sprite_ext(s_player_gloves,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_gloves2{draw_sprite_ext(s_player_gloves2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_gloves3{draw_sprite_ext(s_player_gloves3,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_gloves4{draw_sprite_ext(s_player_gloves4,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_gloves5{draw_sprite_ext(s_player_gloves5,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_gloves6{draw_sprite_ext(s_player_gloves6,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        
        
        //Amulets
        if global.item[i,1]=s_item_amulet_gold{draw_sprite_ext(s_player_amulet_gold,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_amulet_holy{draw_sprite_ext(s_player_amulet_holy,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_amulet_evil{draw_sprite_ext(s_player_amulet_evil,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_amulet_white{draw_sprite_ext(s_player_amulet_white,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_amulet_purple{draw_sprite_ext(s_player_amulet_purple,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_amulet_blue{draw_sprite_ext(s_player_amulet_blue,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_amulet_orange{draw_sprite_ext(s_player_amulet_orange,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_amulet_red{draw_sprite_ext(s_player_amulet_red,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        
        //Helmets
        if global.item[i,1]=s_item_helmet{draw_sprite_ext(s_player_helmet,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_helmet2{draw_sprite_ext(s_player_helmet2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_helmet3{draw_sprite_ext(s_player_helmet3,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_helmet4{draw_sprite_ext(s_player_helmet4,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_helmet5{draw_sprite_ext(s_player_helmet5,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_helmet6{draw_sprite_ext(s_player_helmet,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        
        //Weapons &amp; shields
        if global.item[i,1]=s_item_dagger{draw_sprite_ext(s_player_dagger,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_sword{draw_sprite_ext(s_player_sword,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_bastard_sword{draw_sprite_ext(s_player_bastard_sword,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_handaxe{draw_sprite_ext(s_player_hand_axe,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_greataxe{draw_sprite_ext(s_player_great_axe,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_spear{draw_sprite_ext(s_player_spear,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_hammer{draw_sprite_ext(s_player_hammer,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_pickaxe{draw_sprite_ext(s_player_pickaxe,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_buckler{draw_sprite_ext(s_player_buckler,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_buckler2{draw_sprite_ext(s_player_buckler2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_tower_shield{draw_sprite_ext(s_player_tower_shield,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_tower_shield2{draw_sprite_ext(s_player_tower_shield2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_heater_shield{draw_sprite_ext(s_player_heater_shield,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_heater_shield2{draw_sprite_ext(s_player_heater_shield2,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_heater_shield3{draw_sprite_ext(s_player_heater_shield3,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_spiked_shield{draw_sprite_ext(s_player_spiked_shield,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_hunting_bow{draw_sprite_ext(s_player_hunting_bow,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_short_bow{draw_sprite_ext(s_player_short_bow,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_long_bow{draw_sprite_ext(s_player_long_bow,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_recurve_bow{draw_sprite_ext(s_player_recurve_bow,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_elven_bow{draw_sprite_ext(s_player_elven_bow,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_cross_bow{draw_sprite_ext(s_player_cross_bow,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_war_bow{draw_sprite_ext(s_player_war_bow,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_staff_illusion{draw_sprite_ext(s_player_staff_illusion,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_staff_death{draw_sprite_ext(s_player_staff_death,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_staff_holy{draw_sprite_ext(s_player_staff_holy,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_staff_blood{draw_sprite_ext(s_player_staff_evil,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_staff_brass{draw_sprite_ext(s_player_staff_brass,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_staff_ice{draw_sprite_ext(s_player_staff_blue,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_staff_fire{draw_sprite_ext(s_player_staff_red,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        if global.item[i,1]=s_item_staff_nature{draw_sprite_ext(s_player_staff_green,image_index,x-4,y-4,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
        
        }
    }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(o_generate_map)
{
normalize_stats()
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
