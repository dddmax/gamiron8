<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_item_amulet_red</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>90</depth>
  <persistent>0</persistent>
  <parentName>p_item</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

    var skin, poweri;
    name=""
    
    skin=floor(random(7.99))//0-7
    poweri=floor(random(18.99))//0-18
    
    amulet_vit=0
    amulet_str=0
    amulet_dex=0
    amulet_int=0
    amulet_ac=0
    amulet_ev=0
    
    switch (skin)
        {
        case 0: {name = "Amulet" sprite_index=s_item_amulet_red break}
        case 1: {name = "Amulet" sprite_index=s_item_amulet_orange  break}
        case 2: {name = "Amulet" sprite_index=s_item_amulet_blue break}
        case 3: {name = "Amulet" sprite_index=s_item_amulet_purple break}
        case 4: {name = "Amulet" sprite_index=s_item_amulet_white break}
        case 5: {name = "Amulet" sprite_index=s_item_amulet_gold break}
        case 6: {name = "Amulet" sprite_index=s_item_amulet_evil break}
        case 7: {name = "Amulet" sprite_index=s_item_amulet_holy break}
        }
    switch (poweri)
        {
        case 0: {effect="less_hungry" break}
        case 1: {effect="more_hungry" break}
        case 2: {effect="faster_regen" break}
        case 3: {effect="slower_regen" break}
        case 4: {effect="immune_confusion" break}
        case 5: {effect="immune_poison" break}
        case 6: {effect="hurt" break}
        case 7: {effect="mana_burn" break}
        case 8: {effect="ghost_spawn" break}
        case 9: {effect="ac_inc" break}
        case 10: {effect="ev_inc" break}
        case 11: {effect="int_inc" break}
        case 12: {effect="str_inc" break}
        case 13: {effect="dex_inc" break}
        case 14: {effect="ac_deg" break}
        case global.dungeon_level: {effect="ev_deg" break}
        case 16: {effect="int_deg" break}
        case 17: {effect="str_deg" break}
        case 18: {effect="dex_deg" break}
        }
     
    //temporary   
    effect=""

        
    var uncommon_vit, uncommon_str, uncommon_dex, uncommon_int;
    var rare_vit, rare_str, rare_dex, rare_int;
    var unique_vit, unique_str, unique_dex, unique_int;
    
    uncommon_vit=0
    uncommon_str=0
    uncommon_dex=0
    uncommon_int=0
    
    rare_vit=0
    rare_str=0
    rare_dex=0
    rare_int=0
    
    unique_vit=0
    unique_str=0
    unique_dex=0
    unique_int=0

        var rnd_number;
        
        rnd_number=floor(random(3.99))
    
        switch(rnd_number)
        {
        case 0: {uncommon_vit=round(random(global.dungeon_level*0.5)) break}
        case 1: {uncommon_str=round(random(global.dungeon_level*0.5)) break}
        case 2: {uncommon_dex=round(random(global.dungeon_level*0.5)) break}
        case 3: {uncommon_int=round(random(global.dungeon_level*0.5)) break}
        } 

        
        if floor(random(5-(global.dungeon_level/4)))=0 //every 100th
        {
        
            rnd_number=floor(random(3.99))
        
            switch(rnd_number)
            {
            case 0: {rare_vit=round(random(global.dungeon_level)) break}
            case 1: {rare_str=round(random(global.dungeon_level)) break}
            case 2: {rare_dex=round(random(global.dungeon_level)) break}
            case 3: {rare_int=round(random(global.dungeon_level)) break}
            } 
                
            if floor(random(5-(global.dungeon_level/4)))=0 //every 1000th
            {
                rnd_number=floor(random(3.99))
    
                switch(rnd_number)
                    {
                    case 0: {unique_vit=round(random(global.dungeon_level*2)) break}
                    case 1: {unique_str=round(random(global.dungeon_level*2)) break}
                    case 2: {unique_dex=round(random(global.dungeon_level*2)) break}
                    case 3: {unique_int=round(random(global.dungeon_level*2)) break}
                    } 
            }
        }

    
    amulet_vit+=round((uncommon_vit+rare_vit+unique_vit)/2)
    amulet_str+=uncommon_str+rare_str+unique_str
    amulet_dex+=uncommon_dex+rare_dex+unique_dex
    amulet_int+=uncommon_int+rare_int+unique_int

    


//OTHER
image_alpha=0
unseen=true</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if unseen=true
{image_alpha=0}
else
{image_alpha=0.4}

if instance_exists(o_player)
{

    if (!collision_line(x+9,y+9,o_player.x+9,o_player.y+9,p_wall,true,true) || !collision_line(x+7,y+7,o_player.x+7,o_player.y+7,p_wall,true,true) || !collision_line(x+9,y+7,o_player.x+9,o_player.y+7,p_wall,true,true) || !collision_line(x+7,y+9,o_player.x+7,o_player.y+9,p_wall,true,true) || distance_to_object(o_player)&lt;16)
    {image_alpha=1 unseen=false}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(vk_space) &amp;&amp; global.level_up=false
{
//back_pack_full()

    for (i=0 i&lt;20 i+=1)
        {          
        if global.item[i,0]=""
            {
            global.item[i,0]=name
            global.item[i,1]=sprite_index
            global.item[i,2]="amulet"
            global.item[i,3]=0
            global.item[i,4]="inventory"
            global.item[i,5]=effect
            global.item[i,6]=""
            global.item[i,10]=amulet_vit
            global.item[i,11]=amulet_str
            global.item[i,12]=amulet_dex
            global.item[i,13]=amulet_int
            global.item[i,14]=amulet_ac
            global.item[i,15]=amulet_ev
            
            if global.sound=true {sound_play(snd_pickup)}
            add_message("You pick up an " +string(name)+string('.'))
            instance_destroy()
            break
            }
        }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
