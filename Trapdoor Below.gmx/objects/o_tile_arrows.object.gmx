<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_item_arrows</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>90</depth>
  <persistent>0</persistent>
  <parentName>p_item</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var skin;
    
skin=floor(random(4.99))//0-4
     
switch (skin)
    {
    case 0: {name="Arrows" sprite_index=s_item_arrows amount=2+round(random(18)) type="arrows" break}
    case 1: {name="Arrows" sprite_index=s_item_arrows amount=2+round(random(18)) type="arrows" break}
    case 2: {name="Arrows" sprite_index=s_item_arrows amount=2+round(random(18)) type="arrows" break}
    case 3: {name="Throwing Spears" sprite_index=s_item_throwing_spears amount=2+round(random(8)) type="throwing_spears" break}
    case 4: {name="Throwing Axes" sprite_index=s_item_throwing_axes amount=2+round(random(8)) type="throwing_axes" break}
    }
        
    
    
    
    
//OTHER
image_alpha=0
unseen=true</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if unseen=true
{image_alpha=0}
else
{image_alpha=0.4}

if instance_exists(o_player)
{

    if (!collision_line(x+9,y+9,o_player.x+9,o_player.y+9,p_wall,true,true) || !collision_line(x+7,y+7,o_player.x+7,o_player.y+7,p_wall,true,true) || !collision_line(x+9,y+7,o_player.x+9,o_player.y+7,p_wall,true,true) || !collision_line(x+7,y+9,o_player.x+7,o_player.y+9,p_wall,true,true) || distance_to_object(o_player)&lt;16)
    {image_alpha=1 unseen=false}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(vk_space) &amp;&amp; global.level_up=false
{
//back_pack_full()

    for (i=0 i&lt;20 i+=1)
        {            
        if global.item[i,0]=name &amp;&amp; global.item[i,3]&lt;25
            {
            global.item[i,3]+=amount
            
            if global.item[i,3]&gt;=25
                {
                global.item[i,3]=25
                }
            
            if amount&gt;1
            {
            if global.sound=true {sound_play(snd_pickup)}
            add_message("You pick up " +string(name)+string('.'))  
            } 
            
            if amount=1
            {
            if global.sound=true {sound_play(snd_pickup)}
                {
                if name="Arrows"
                add_message("You pick up an Arrow.")  
                if name="Throwing Spears"
                add_message("You pick up a Throwing Spear.") 
                if name="Throwing Axes"
                add_message("You pick up a Throwing Axe.") 
                }
            } 
            
            instance_destroy()
            exit
            break
            }
        }
    for (i=0 i&lt;20 i+=1)
        {
        if global.item[i,0]=""
            {
            global.item[i,0]=name
            global.item[i,1]=sprite_index
            global.item[i,2]=type
            global.item[i,3]=amount
            global.item[i,4]="inventory"
            global.item[i,5]=""
            global.item[i,6]=""
            
            
            if amount&gt;1
            {
            if global.sound=true {sound_play(snd_pickup)}
            add_message("You pick up " +string(name)+string('.'))  
            } 
            
            if amount=1
            {
            if global.sound=true {sound_play(snd_pickup)}
                {
                if name="Arrows"
                add_message("You pick up an Arrow.")  
                if name="Throwing Spears"
                add_message("You pick up a Throwing Spear.") 
                if name="Throwing Axes"
                add_message("You pick up a Throwing Axe.") 
                } 
            }   
            instance_destroy()
            break
            }
        }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
